<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzu.edu.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.fzu.edu.model.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_hour" jdbcType="VARCHAR" property="classHour" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="class_time" jdbcType="VARCHAR" property="classTime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, class_hour, type, teacher_name, start_time, end_time, class_time, 
    flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert1" parameterType="com.fzu.edu.model.Course">
    insert into course (code, name,
      class_hour, type, teacher_name, 
      start_time, end_time, class_time, 
      flag)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{classHour,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{classTime,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fzu.edu.model.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="classTime != null">
        class_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null">
        #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzu.edu.model.Course">
    update course
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        class_hour = #{classHour,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null">
        class_time = #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzu.edu.model.Course">
    update course
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      class_hour = #{classHour,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      class_time = #{classTime,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllCourse" parameterType="hashmap" resultMap="BaseResultMap">
     SELECT * FROM course WHERE flag=0
    <if test="name != null and name !='' ">
      and  name LIKE '%'+#{name}+'%'
    </if>
    <if test="code != null and code !='' ">
      and  code LIKE '%'+#{code}+'%'
    </if>
  </select>
  <update id="delCourses" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update course
      <set>
        flag = 1
      </set>
      where id = ${item}
    </foreach>
  </update>
</mapper>