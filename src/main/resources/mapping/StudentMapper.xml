<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzu.edu.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.fzu.edu.model.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, code, sex, phone, email, flag, school_id, passwd, college_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.fzu.edu.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzu.edu.model.Student">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzu.edu.model.Student">
    update student
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      passwd = #{passwd,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllStudentForImport" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select st.*,sl.school_name,c.college_name
    FROM  student st LEFT JOIN school sl ON st.school_id=sl.id LEFT  JOIN college c ON st.college_id=c.id
    where st.flag=0 and st.school_id=#{school_id}
  </select>
 <select id="selectAllStudent" parameterType="hashmap" resultType="hashmap">
   SELECT s.*,c.college_name AS cname,sc.school_name AS sname FROM student s,college c,school sc
   WHERE s.flag=0 AND s.college_id = c.id
   AND s.school_id = sc.id AND c.id=#{college_id} AND sc.id =#{school_id}
   <if test="name != null">
     AND name LIKE '%'+#{name,jdbcType=VARCHAR}+'%'
   </if>
   <if test="code != null">
     AND code LIKE '%'+#{code,jdbcType=VARCHAR}+'%'
   </if>
 </select>
  <update id="delStudents" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update student
      <set>
        flag = 1
      </set>
      where id = ${item}
    </foreach>
  </update>
  <select id="codeUnique" parameterType="hashmap" resultMap="BaseResultMap">
    SELECT * FROM student WHERE flag = 0 AND code = #{code}
  </select>
  <select id="selectByCodeForApp" parameterType="java.lang.String" resultMap="BaseResultMap">
     SELECT * FROM student WHERE flag = 0 AND code = #{useranme}
  </select>
</mapper>