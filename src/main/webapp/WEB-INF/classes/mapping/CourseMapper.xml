<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzu.edu.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.fzu.edu.model.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="class_hour" jdbcType="VARCHAR" property="classHour" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, class_hour, flag,college_id,school_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert1" parameterType="com.fzu.edu.model.Course">
    insert into course (code, name,
      class_hour, type, teacher_id, 
      start_time, end_time, class_time, 
      flag,college_id,school_id)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{classHour,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER},
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{classTime,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER},#{collegeId,jdbcType=INTEGER},#{schoolId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fzu.edu.model.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="classTime != null">
        class_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null">
        #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzu.edu.model.Course">
    update course
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classHour != null">
        class_hour = #{classHour,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null">
        class_time = #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzu.edu.model.Course">
    update course
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      class_hour = #{classHour,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      class_time = #{classTime,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllCourse" parameterType="hashmap" resultType="hashmap">
    SELECT c.*,s.school_name,col.college_name FROM course c,school s,college col WHERE c.flag=0
    AND c.school_id = s.id AND c.college_id = col.id
    <if test="name != null and name !='' ">
      and  c.name LIKE '%'+#{name}+'%'
    </if>
    <if test="code != null and code !='' ">
      and  c.code LIKE '%'+#{code}+'%'
    </if>
    ORDER BY c.id DESC
  </select>
  <update id="delCourses" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update course
      <set>
        flag = 1
      </set>
      where id = ${item}
    </foreach>
  </update>
  <select id="getAllTeacher"  resultType="hashmap">
    SELECT * FROM userinfo WHERE mark=2 AND flag=0
  </select>
  <select id="getAllCollege" resultType="hashmap">
    SELECT * FROM college WHERE flag=0
  </select>
  <select id="getAllSchool" resultType="hashmap">
    SELECT * FROM school WHERE flag=0
</select>
    <select id="getAllCourseBySchoolId" parameterType="hashmap"  resultType="java.util.HashMap">
    SELECT DISTINCT c.*,e.college_name,sl.school_name,a.user_id
    FROM  course c LEFT JOIN  college e on c.college_id=e.id  LEFT  JOIN school sl on  c.school_id=sl.id LEFT  JOIN arrange a on c.id=a.course_id
    where c.flag=0 and c.college_id= #{college,jdbcType=INTEGER} and c.school_id= #{school_id,jdbcType=INTEGER}
    <if test="mark==1 and keyWord!=null and keyWord!=''">
        and c.name LIKE '%'+#{keyWord}+'%'
    </if>
    <if test="mark==2 and keyWord!=null and keyWord!=''">
        and c.code LIKE '%'+#{keyWord}+'%'
     </if>
     <if test="mark==3 and keyWord!=null and keyWord!=''">
          and s.user_name LIKE '%'+#{keyWord}+'%'
       </if>
</select>
    <select id="getAllCourseForStudentFromCourse" parameterType="hashmap"  resultType="java.util.HashMap">
    SELECT c.*,e.college_name,s.user_name
    FROM  course c LEFT JOIN  college e on c.college_id=e.id LEFT  JOIN userinfo s on c.teacher_id=s.id and s.mark=2
    where c.flag=0 and c.college_id= #{college_id,jdbcType=INTEGER} and c.school_id= #{school_id,jdbcType=INTEGER} and c.type=0
      <if test="mark==1 and keyWord!=null and keyWord!=''">
        and c.name LIKE '%'+#{keyWord}+'%'
      </if>
      <if test="mark==2 and keyWord!=null and keyWord!=''">
        and c.code LIKE '%'+#{keyWord}+'%'
      </if>
      <if test="mark==3 and keyWord!=null and keyWord!=''">
        and s.user_name LIKE '%'+#{keyWord}+'%'
      </if>
</select>
  <select id="getCourseForClass" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT c.*
    from course c
    WHERE c.teacher_id=#{user_id,jdbcType=INTEGER} AND c.flag=0
  </select>
</mapper>